<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-13T10:48:01.497Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建个人博客(一)：Hexo本地的使用和配置</title>
    <link href="http://yoursite.com/2020/06/13/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(%E4%B8%80)%EF%BC%9AHexo%E6%9C%AC%E5%9C%B0%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/06/13/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(%E4%B8%80)%EF%BC%9AHexo%E6%9C%AC%E5%9C%B0%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E9%85%8D%E7%BD%AE/</id>
    <published>2020-06-13T10:41:25.108Z</published>
    <updated>2020-06-13T10:48:01.497Z</updated>
    
    <content type="html"><![CDATA[<p>最近突然想搭建自己的个人博客，刚完成，准备吧过程分享给大家，包括主题的修改等，废话不多说了</p><p>上效果:<a href="https://w714860761.github.io/" target="_blank" rel="noopener">溯</a></p><h3 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h3><h4 id="1-了解Hexo"><a href="#1-了解Hexo" class="headerlink" title="1. 了解Hexo"></a>1. 了解Hexo</h4><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h4 id="2-git版本控制工具"><a href="#2-git版本控制工具" class="headerlink" title="2. git版本控制工具"></a>2. git版本控制工具</h4><p>Git是一个免费的、开源的版本控制软件。在Windows上安装git，一般为msysgit，<br>官方下载地址 :<a href="http://code.google.com/p/msysgit/downloads/list" target="_blank" rel="noopener">http://code.google.com/p/msysgit/downloads/list</a><br>安装步骤下一步即可……</p><h4 id="3-Node-js环境"><a href="#3-Node-js环境" class="headerlink" title="3. Node.js环境"></a>3. Node.js环境</h4><p>简单的说 Node.js 就是运行在服务端的 JavaScript。<br>nodejs官网：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br>注意:选择LTS版本安装，直接全部点击下一步就行</p><h3 id="二、配置环境变量"><a href="#二、配置环境变量" class="headerlink" title="二、配置环境变量"></a>二、配置环境变量</h3><p>配置好环境变量后（默认大家都不是新手了哈，如果还是不知道，百度…）<br>打开cmd<br>输入 node -v  (检查版本)<br>输入npm -v (检查版本）<br>输入 git –version  （检查git版本，目的是为了看有没有安装成功git）</p><p><img src="https://img-blog.csdnimg.cn/20200613175959722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>如上表示环境变量配置成功</strong></p><h3 id="三、本地配置Hexo环境"><a href="#三、本地配置Hexo环境" class="headerlink" title="三、本地配置Hexo环境"></a>三、本地配置Hexo环境</h3><p>常用hexo命令:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="comment">//初始化hexo博客</span></span><br><span class="line">hexo clean <span class="comment">//清除缓存 网页正常情况下可以忽略此条命令</span></span><br><span class="line">hexo g <span class="comment">//生成静态网页</span></span><br><span class="line">hexo d <span class="comment">//开始部署</span></span><br><span class="line">hexo s <span class="comment">//启动本地服务器</span></span><br><span class="line">npm install -g hexo-cli <span class="comment">//hexo的安装</span></span><br></pre></td></tr></table></figure><p>在你的目录下建立文件夹(建议取名blog，必须为空)，右键选择git bash here打开git，如下图:</p><p><img src="https://img-blog.csdnimg.cn/20200613180800467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt=""></p><p>在打开的终端窗口中输入“npm install -g hexo-cli”来进行hexo的安装，安装成功后如下图:</p><p><img src="https://img-blog.csdnimg.cn/20200613181235895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>继续输入”hexo init”进行博客初始化，从github地址克隆项目，成功后如下图，多等一会:</p><p><img src="https://img-blog.csdnimg.cn/20200613181821982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>之后分别键入”hexo g”和”hexo s”，如下图</p><p><img src="https://img-blog.csdnimg.cn/20200613181932947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>至此，进入本地浏览器输入:<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a><br>就可以查看博客了，如下</p><p><img src="https://img-blog.csdnimg.cn/20200613182044836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>激动人心！</strong><br>Ctrl+C:停止服务器<br>下一节讲解配置hexo的主题，让你的博客更加的美观</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近突然想搭建自己的个人博客，刚完成，准备吧过程分享给大家，包括主题的修改等，废话不多说了&lt;/p&gt;
&lt;p&gt;上效果:&lt;a href=&quot;https://w714860761.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;溯&lt;/a&gt;&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>一个可视化的java程序解析XML文档（存储学生信息数据）</title>
    <link href="http://yoursite.com/2020/06/12/%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84java%E7%A8%8B%E5%BA%8F%E8%A7%A3%E6%9E%90XML%E6%96%87%E6%A1%A3/"/>
    <id>http://yoursite.com/2020/06/12/%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84java%E7%A8%8B%E5%BA%8F%E8%A7%A3%E6%9E%90XML%E6%96%87%E6%A1%A3/</id>
    <published>2020-06-12T15:41:05.350Z</published>
    <updated>2020-06-13T11:38:15.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、XML文档解析基础概念"><a href="#一、XML文档解析基础概念" class="headerlink" title="一、XML文档解析基础概念"></a>一、XML文档解析基础概念</h2><p><strong>1、XML文档有四种解析方法：</strong><br>（1）Dom文档对象解析<br>（2）SAX简单的XML API<br>（3）JDOM Java文档对象模型（常用）<br>（4）DOM4J扩展与JDOM（常用）<br>本文主要讲解最后一种解析方法：</p><p><strong>2、Dom4j解析XML文档</strong><br>dom4j是由第三方提供扩展子JDOMAPI的一组解析XML文件的java实现，它只和java有关。dom4j对XML文档实现与JDOM类似，idom将XML文档中的每个节点（node）称之为Element(元素)，并提供对元素上下级的获取等实用方法。<br>dom4j解析XML大体分为两种操作：<br>（1）读取目标XML文档并解析，封装成运行时的Java对象进行处理<br>（2）将运行时Java对象以XML文件方式写入硬盘存储</p><p><strong>**3、Dom4j写入XML文档步骤</strong>：**<br>（1）创建DocumentFactory用来创建Document对象<br>（2）使用DOM4J实现对Document对象操作<br>（3）创建XMLWriter用来将Document对象写入XML文件<br>（4）关闭相关文件流</p><p><strong>4、Dom4j读取XML文档步骤：</strong><br>（1）基于xml文件路径创建File对象<br>（2）创建SAXReader用来加载xml文件为Document<br>（3）利用DOM4J相关方法解析XML文档<br>（4）封装文档对象数据为Java对象</p><h2 id="二、程序实例"><a href="#二、程序实例" class="headerlink" title="二、程序实例"></a>二、程序实例</h2><p>下面通过一个实例进行学习：<br><strong>实例概要</strong>：由XML文档存储学生数据，并对其数据进行增删改查的操作</p><p>学生类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> NEYMAR</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String code;<span class="comment">//学号</span></span><br><span class="line"><span class="keyword">private</span> String name;<span class="comment">//姓名</span></span><br><span class="line"><span class="keyword">private</span> String sex;<span class="comment">//性别</span></span><br><span class="line"><span class="keyword">private</span> String specialty;<span class="comment">//专业</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无参构造函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 含参构造函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> code 学号</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name 姓名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sex 性别</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> specialty 专业</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String code,String name,String sex,String specialty)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.code=code;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"><span class="keyword">this</span>.sex=sex;</span><br><span class="line"><span class="keyword">this</span>.specialty=specialty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> code;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.code = code;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sex = sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSpecialty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> specialty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSpecialty</span><span class="params">(String specialty)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.specialty = specialty;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工具类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.OutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.XMLWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> NEYMAR</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tools</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前项目路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回该路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getprojectPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String Path=System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line"><span class="keyword">return</span> Path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取类路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回该路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getClassPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String Path=Tools.class.getClassLoader().getResource("").getPath().toString();</span><br><span class="line"><span class="keyword">return</span> Path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断学生对象是否为空</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> e 学生对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 若为空，则返回true,若不为空，则返回false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isListEmpty</span><span class="params">(Student e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e==<span class="keyword">null</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断XML文件是否存在</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> Path 路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 若存在，则返回true，否则返回false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isXmlEmpty</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">String classPath=Tools.getClassPath();<span class="comment">//获取类路径</span></span><br><span class="line">File file=<span class="keyword">new</span> File(classPath+<span class="string">"com/Xml/"</span>+name);</span><br><span class="line"><span class="keyword">if</span>(file.exists())</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现解析XML文档数据的类（<strong>核心</strong>）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.DocumentException;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.DocumentFactory;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.OutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.XMLWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用Dom4j方式解析XML文档</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> NEYMAR</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dom4jManger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用DocumentFactory的静态方法创建DocumentFactory对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> DocumentFactory docfactory=DocumentFactory.getInstance();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化XML文档</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName 文件名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Dom4jManger</span><span class="params">(String fileName,Student stu)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Document doc=docfactory.createDocument(<span class="string">"utf-8"</span>);<span class="comment">//创建document实例，并规定其编码格式为UTF-8</span></span><br><span class="line">Element rootEle=docfactory.createElement(<span class="string">"Students"</span>);<span class="comment">//创建文档根元素</span></span><br><span class="line">doc.setRootElement(rootEle);<span class="comment">//设置文档</span></span><br><span class="line"><span class="comment">//若STU对象不为空</span></span><br><span class="line"><span class="keyword">if</span>(!Tools.isListEmpty(stu)) &#123;</span><br><span class="line">Element stuEle=docfactory.createElement(<span class="string">"student"</span>);<span class="comment">//创建rooeEle下的子元素</span></span><br><span class="line">Element NameEle=docfactory.createElement(<span class="string">"name"</span>);<span class="comment">//创建stuEle下的子元素name</span></span><br><span class="line">NameEle.setText(stu.getName());<span class="comment">//设置NameEle的文本值</span></span><br><span class="line">Element SexEle=docfactory.createElement(<span class="string">"sex"</span>);</span><br><span class="line">SexEle.setText(stu.getSex());</span><br><span class="line">Element CodeEle=docfactory.createElement(<span class="string">"code"</span>);</span><br><span class="line">CodeEle.setText(stu.getCode());</span><br><span class="line">Element SpecialtyEle=docfactory.createElement(<span class="string">"specialty"</span>);</span><br><span class="line">SpecialtyEle.setText(stu.getSpecialty());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*将子元素添加到stuEle中*/</span></span><br><span class="line">stuEle.add(NameEle);</span><br><span class="line">stuEle.add(CodeEle);</span><br><span class="line">stuEle.add(SexEle);</span><br><span class="line">stuEle.add(SpecialtyEle);</span><br><span class="line"><span class="comment">/*将stuEle元素添加到根元素下*/</span></span><br><span class="line">rootEle.add(stuEle);</span><br><span class="line">&#125;</span><br><span class="line">String classPath=Tools.getClassPath();<span class="comment">//获取类路径</span></span><br><span class="line">File xmlFile=<span class="keyword">new</span> File(classPath+<span class="string">"com/Xml/"</span>+fileName);<span class="comment">//创建目标文件对象</span></span><br><span class="line">Writer writer=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer=<span class="keyword">new</span> FileWriter(xmlFile);<span class="comment">//创建Writer对象</span></span><br><span class="line">XMLWriter xmlWriter=<span class="keyword">new</span> XMLWriter(writer,OutputFormat.createPrettyPrint());<span class="comment">//OutputFormat.createPrettyPrint()可以使XML文件形成一种规范</span></span><br><span class="line">xmlWriter.write(doc);<span class="comment">//保存为XML目标文件</span></span><br><span class="line">writer.flush();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在XML文档中添加学生对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName XML文件名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stuList 学生的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddStudent</span><span class="params">(String fileName,Student stu)</span> </span>&#123;</span><br><span class="line">String classPath=Tools.getClassPath();<span class="comment">//获取类路径</span></span><br><span class="line">File xmlFile=<span class="keyword">new</span> File(classPath+<span class="string">"com/Xml/"</span>+fileName);<span class="comment">//基于文件路径创建文件对象</span></span><br><span class="line">Reader reader=<span class="keyword">null</span>;</span><br><span class="line">Writer writer=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader=<span class="keyword">new</span> FileReader(xmlFile);<span class="comment">//基于XML文件建立文件流</span></span><br><span class="line">SAXReader saxReader=<span class="keyword">new</span> SAXReader();<span class="comment">//建立SAX文件对象流</span></span><br><span class="line">Document docReader=saxReader.read(reader);<span class="comment">//读取XML文件</span></span><br><span class="line"><span class="keyword">if</span>(docReader!=<span class="keyword">null</span>) &#123;</span><br><span class="line">Element rootEle=docReader.getRootElement();<span class="comment">//获取根元素</span></span><br><span class="line">Element stuEle=docfactory.createElement(<span class="string">"student"</span>);<span class="comment">//创建rooeEle下的子元素</span></span><br><span class="line">Element NameEle=docfactory.createElement(<span class="string">"name"</span>);<span class="comment">//创建stuEle下的子元素name</span></span><br><span class="line">NameEle.setText(stu.getName());<span class="comment">//设置NameEle的文本值</span></span><br><span class="line">Element SexEle=docfactory.createElement(<span class="string">"sex"</span>);</span><br><span class="line">SexEle.setText(stu.getSex());</span><br><span class="line">Element CodeEle=docfactory.createElement(<span class="string">"code"</span>);</span><br><span class="line">CodeEle.setText(stu.getCode());</span><br><span class="line">Element SpecialtyEle=docfactory.createElement(<span class="string">"specialty"</span>);</span><br><span class="line">SpecialtyEle.setText(stu.getSpecialty());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*将子元素添加到stuEle中*/</span></span><br><span class="line">stuEle.add(NameEle);</span><br><span class="line">stuEle.add(CodeEle);</span><br><span class="line">stuEle.add(SexEle);</span><br><span class="line">stuEle.add(SpecialtyEle);</span><br><span class="line"><span class="comment">/*将stuEle元素添加到根元素下*/</span></span><br><span class="line">rootEle.add(stuEle);</span><br><span class="line">&#125;</span><br><span class="line">writer=<span class="keyword">new</span> FileWriter(xmlFile);<span class="comment">//创建Writer对象</span></span><br><span class="line">XMLWriter xmlWriter=<span class="keyword">new</span> XMLWriter(writer,OutputFormat.createPrettyPrint());<span class="comment">//OutputFormat.createPrettyPrint()可以使XML文件形成一种规范</span></span><br><span class="line">xmlWriter.write(docReader);<span class="comment">//保存为XML目标文件</span></span><br><span class="line"><span class="comment">//writer.flush();</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.close();</span><br><span class="line">reader.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除学生对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName XML文件名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stu 学生对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeStudent</span><span class="params">(String fileName,String code)</span> </span>&#123;</span><br><span class="line">String classPath=Tools.getClassPath();<span class="comment">//获取类路径</span></span><br><span class="line">File xmlFile=<span class="keyword">new</span> File(classPath+<span class="string">"com/Xml/"</span>+fileName);<span class="comment">//基于文件路径创建文件对象</span></span><br><span class="line">Reader reader=<span class="keyword">null</span>;</span><br><span class="line">Writer writer=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader=<span class="keyword">new</span> FileReader(xmlFile);<span class="comment">//基于XML文件建立文件流</span></span><br><span class="line">SAXReader saxReader=<span class="keyword">new</span> SAXReader();<span class="comment">//建立SAX文件对象流</span></span><br><span class="line">Document docReader=saxReader.read(reader);<span class="comment">//读取XML文件</span></span><br><span class="line"><span class="keyword">if</span>(docReader!=<span class="keyword">null</span>) &#123;</span><br><span class="line">Element rootEle=docReader.getRootElement();<span class="comment">//获取根元素</span></span><br><span class="line">List&lt;Element&gt; elements=rootEle.elements(<span class="string">"student"</span>);<span class="comment">//获取根元素下所有子元素</span></span><br><span class="line"><span class="keyword">for</span>(Element e:elements) &#123;<span class="comment">//遍历根元素</span></span><br><span class="line">String codeValue=e.element(<span class="string">"code"</span>).getText();<span class="comment">//获取code属性值进行对比</span></span><br><span class="line"><span class="keyword">if</span>(code.equals(codeValue)) &#123;</span><br><span class="line">Element par=e.getParent();</span><br><span class="line">par.remove(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">writer=<span class="keyword">new</span> FileWriter(xmlFile);<span class="comment">//创建Writer对象</span></span><br><span class="line">XMLWriter xmlWriter=<span class="keyword">new</span> XMLWriter(writer,OutputFormat.createPrettyPrint());<span class="comment">//OutputFormat.createPrettyPrint()可以使XML文件形成一种规范</span></span><br><span class="line">xmlWriter.write(docReader);<span class="comment">//保存为XML目标文件</span></span><br><span class="line"><span class="comment">//writer.flush();</span></span><br><span class="line"><span class="comment">//writer.close();</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader.close();</span><br><span class="line">writer.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取XMl文档内的学生对象信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName 文件路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Student&gt; <span class="title">PrintStudent</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">List&lt;Student&gt; stuList=<span class="keyword">new</span> ArrayList&lt;Student&gt;();</span><br><span class="line">String classPath=Tools.getClassPath();<span class="comment">//获取类路径</span></span><br><span class="line">File xmlFile=<span class="keyword">new</span> File(classPath+<span class="string">"com/Xml/"</span>+fileName);<span class="comment">//基于文件路径创建文件对象</span></span><br><span class="line">Reader reader=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader=<span class="keyword">new</span> FileReader(xmlFile);<span class="comment">//基于XML文件建立文件流</span></span><br><span class="line">SAXReader saxReader=<span class="keyword">new</span> SAXReader();<span class="comment">//建立SAX文件对象流</span></span><br><span class="line">Document docReader=saxReader.read(reader);<span class="comment">//读取XML文件</span></span><br><span class="line"><span class="keyword">if</span>(docReader!=<span class="keyword">null</span>) &#123;</span><br><span class="line">Element rootEle=docReader.getRootElement();<span class="comment">//获取根元素</span></span><br><span class="line">List&lt;Element&gt; eleList=rootEle.elements(<span class="string">"student"</span>);<span class="comment">//获取所有根元素下的子元素</span></span><br><span class="line"><span class="keyword">for</span>(Element e:eleList) &#123;</span><br><span class="line">Student empObj=<span class="keyword">new</span> Student();</span><br><span class="line">String name=e.element(<span class="string">"name"</span>).getText();<span class="comment">//获取元素name</span></span><br><span class="line">empObj.setName(name);</span><br><span class="line"></span><br><span class="line">String code=e.element(<span class="string">"code"</span>).getText();<span class="comment">//获取元素code</span></span><br><span class="line">empObj.setCode(code);</span><br><span class="line"></span><br><span class="line">String sex=e.element(<span class="string">"sex"</span>).getText();<span class="comment">//获取元素sex</span></span><br><span class="line">empObj.setSex(sex);</span><br><span class="line"></span><br><span class="line">String specialty=e.element(<span class="string">"specialty"</span>).getText();<span class="comment">//获取元素specialty</span></span><br><span class="line">empObj.setSpecialty(specialty);</span><br><span class="line"></span><br><span class="line">stuList.add(empObj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> stuList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改学生信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName XML文档名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stu 被修改的学生对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">changeStudent</span><span class="params">(String fileName,Student stu)</span> </span>&#123;</span><br><span class="line">String classPath=Tools.getClassPath();<span class="comment">//获取类路径</span></span><br><span class="line">File xmlFile=<span class="keyword">new</span> File(classPath+<span class="string">"com/Xml/"</span>+fileName);<span class="comment">//基于文件路径创建文件对象</span></span><br><span class="line">Reader reader=<span class="keyword">null</span>;</span><br><span class="line">Writer writer=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader=<span class="keyword">new</span> FileReader(xmlFile);<span class="comment">//基于XML文件建立文件流</span></span><br><span class="line">SAXReader saxReader=<span class="keyword">new</span> SAXReader();<span class="comment">//建立SAX文件对象流</span></span><br><span class="line">Document docReader=saxReader.read(reader);<span class="comment">//读取XML文件</span></span><br><span class="line"><span class="keyword">if</span>(docReader!=<span class="keyword">null</span>) &#123;</span><br><span class="line">Element rootEle=docReader.getRootElement();<span class="comment">//获取根元素</span></span><br><span class="line">List&lt;Element&gt; elements=rootEle.elements(<span class="string">"student"</span>);<span class="comment">//获取根元素下所有子元素</span></span><br><span class="line"><span class="keyword">for</span>(Element e:elements) &#123;<span class="comment">//遍历根元素</span></span><br><span class="line">String codeValue=e.element(<span class="string">"code"</span>).getText();<span class="comment">//获取code属性值进行对比</span></span><br><span class="line"><span class="keyword">if</span>(stu.getCode().equals(codeValue)) &#123;</span><br><span class="line">Element nameEle=e.element(<span class="string">"name"</span>);<span class="comment">//获取e元素下的子元素name</span></span><br><span class="line">nameEle.setText(stu.getName());<span class="comment">//更改元素name的属性值</span></span><br><span class="line">Element sexEle=e.element(<span class="string">"sex"</span>);<span class="comment">//获取e元素下的子元素sex</span></span><br><span class="line">sexEle.setText(stu.getSex());<span class="comment">//更改元素sex的属性值</span></span><br><span class="line">Element specialtyEle=e.element(<span class="string">"specialty"</span>);<span class="comment">//获取e元素下的子元素specialty</span></span><br><span class="line">specialtyEle.setText(stu.getSpecialty());<span class="comment">//更改元素specialty的属性值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">writer=<span class="keyword">new</span> FileWriter(xmlFile);<span class="comment">//创建Writer对象</span></span><br><span class="line">XMLWriter xmlWriter=<span class="keyword">new</span> XMLWriter(writer,OutputFormat.createPrettyPrint());<span class="comment">//OutputFormat.createPrettyPrint()可以使XML文件形成一种规范</span></span><br><span class="line">xmlWriter.write(docReader);<span class="comment">//保存为XML目标文件</span></span><br><span class="line"><span class="comment">//writer.flush();</span></span><br><span class="line"><span class="comment">//writer.close();</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader.close();</span><br><span class="line">writer.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现可视化窗口以及各项操作的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.frame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Container;</span><br><span class="line"><span class="keyword">import</span> java.awt.Dimension;</span><br><span class="line"><span class="keyword">import</span> java.awt.GridLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Toolkit;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.ImageIcon;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JMenu;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JMenuBar;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JMenuItem;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPasswordField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JScrollPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JSplitPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTabbedPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTable;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.SwingConstants;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.ChangeEvent;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.ChangeListener;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.util.Dom4jManger;</span><br><span class="line"><span class="keyword">import</span> com.util.Tools;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 界面类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> NEYMAR</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XmlFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> JTabbedPane tabbedPane = <span class="keyword">new</span> JTabbedPane();<span class="comment">//创建一个选项卡</span></span><br><span class="line"><span class="keyword">private</span> JPanel addPanel=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">6</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">5</span>));<span class="comment">//添加学生数据面板</span></span><br><span class="line"><span class="keyword">private</span> JPanel removePanel=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">5</span>));<span class="comment">//删除学生数据面板</span></span><br><span class="line"><span class="keyword">private</span> JScrollPane printPanel;<span class="comment">//浏览学生数据面板</span></span><br><span class="line"><span class="keyword">private</span> JPanel changePanel=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">6</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">5</span>));<span class="comment">//修改学生数据面板</span></span><br><span class="line"><span class="keyword">private</span> JPanel pathPanel=<span class="keyword">new</span> JPanel();<span class="comment">//增加新的XML路径面板</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加学生数据面板组件*/</span></span><br><span class="line"><span class="keyword">public</span> JPanel addjp=<span class="keyword">new</span> JPanel();<span class="comment">//XML文档名称</span></span><br><span class="line"><span class="keyword">public</span> JPanel addjp1=<span class="keyword">new</span> JPanel();<span class="comment">//学生姓名</span></span><br><span class="line"><span class="keyword">public</span> JPanel addjp2=<span class="keyword">new</span> JPanel();<span class="comment">//学生学号</span></span><br><span class="line"><span class="keyword">public</span> JPanel addjp3=<span class="keyword">new</span> JPanel();<span class="comment">//学生性别</span></span><br><span class="line"><span class="keyword">public</span> JPanel addjp4=<span class="keyword">new</span> JPanel();<span class="comment">//学生专业</span></span><br><span class="line"><span class="keyword">public</span> JPanel addjp5=<span class="keyword">new</span> JPanel();<span class="comment">//按钮</span></span><br><span class="line"><span class="keyword">public</span> JLabel addjl=<span class="keyword">new</span> JLabel(<span class="string">"文档名称:"</span>);<span class="comment">//XML文档名称标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel addjl1=<span class="keyword">new</span> JLabel(<span class="string">"学生姓名:"</span>);<span class="comment">//姓名标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel addjl2=<span class="keyword">new</span> JLabel(<span class="string">"学生学号:"</span>);<span class="comment">//学号标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel addjl3=<span class="keyword">new</span> JLabel(<span class="string">"学生性别:"</span>);<span class="comment">//性别标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel addjl4=<span class="keyword">new</span> JLabel(<span class="string">"学生专业:"</span>);<span class="comment">//专业标签</span></span><br><span class="line"><span class="keyword">public</span> JTextField addj=<span class="keyword">new</span> JTextField();<span class="comment">//XML文档名称的文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField addj1=<span class="keyword">new</span> JTextField();<span class="comment">//学生姓名的文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField addj2=<span class="keyword">new</span> JTextField();<span class="comment">//学生学号的文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField addj3=<span class="keyword">new</span> JTextField();<span class="comment">//学生性别的文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField addj4=<span class="keyword">new</span> JTextField();<span class="comment">//学生专业的文本框</span></span><br><span class="line"><span class="keyword">public</span>JButton addb1=<span class="keyword">new</span> JButton(<span class="string">"录入"</span>);<span class="comment">//定义一个录入按钮</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*新建XML文档面板组件*/</span></span><br><span class="line">JPanel pathjp1=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="keyword">public</span> JLabel pathjl1=<span class="keyword">new</span> JLabel(<span class="string">"文档名称:"</span>);</span><br><span class="line"><span class="keyword">public</span> JTextField pathj1=<span class="keyword">new</span> JTextField();</span><br><span class="line"><span class="keyword">public</span>JButton pathb1=<span class="keyword">new</span> JButton(<span class="string">"新建"</span>);<span class="comment">//定义一个录入按钮</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*浏览学生信息面板组件*/</span></span><br><span class="line">JTable table=<span class="keyword">null</span>;</span><br><span class="line">Vector row,col;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更改学生信息面板组件*/</span></span><br><span class="line"><span class="keyword">public</span> JPanel changejp=<span class="keyword">new</span> JPanel();<span class="comment">//XML文档名称</span></span><br><span class="line"><span class="keyword">public</span> JPanel changejp1=<span class="keyword">new</span> JPanel();<span class="comment">//学生姓名</span></span><br><span class="line"><span class="keyword">public</span> JPanel changejp2=<span class="keyword">new</span> JPanel();<span class="comment">//学生学号</span></span><br><span class="line"><span class="keyword">public</span> JPanel changejp3=<span class="keyword">new</span> JPanel();<span class="comment">//学生性别</span></span><br><span class="line"><span class="keyword">public</span> JPanel changejp4=<span class="keyword">new</span> JPanel();<span class="comment">//学生专业</span></span><br><span class="line"><span class="keyword">public</span> JPanel changejp5=<span class="keyword">new</span> JPanel();<span class="comment">//按钮面板</span></span><br><span class="line"><span class="keyword">public</span> JLabel changejl=<span class="keyword">new</span> JLabel(<span class="string">"文档名称:"</span>);<span class="comment">//XML文档名称标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel changejl1=<span class="keyword">new</span> JLabel(<span class="string">"学生姓名:"</span>);<span class="comment">//姓名标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel changejl2=<span class="keyword">new</span> JLabel(<span class="string">"学生学号:"</span>);<span class="comment">//学号标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel changejl3=<span class="keyword">new</span> JLabel(<span class="string">"学生性别:"</span>);<span class="comment">//性别标签</span></span><br><span class="line"><span class="keyword">public</span> JLabel changejl4=<span class="keyword">new</span> JLabel(<span class="string">"学生专业:"</span>);<span class="comment">//专业标签</span></span><br><span class="line"><span class="keyword">public</span> JTextField changej=<span class="keyword">new</span> JTextField();<span class="comment">//XML文档名文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField changej1=<span class="keyword">new</span> JTextField();<span class="comment">//学生姓名的文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField changej2=<span class="keyword">new</span> JTextField();<span class="comment">//学生学号的文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField changej3=<span class="keyword">new</span> JTextField();<span class="comment">//学生性别的文本框</span></span><br><span class="line"><span class="keyword">public</span> JTextField changej4=<span class="keyword">new</span> JTextField();<span class="comment">//学生专业的文本框</span></span><br><span class="line"><span class="keyword">public</span>JButton changeb1=<span class="keyword">new</span> JButton(<span class="string">"更改"</span>);<span class="comment">//定义一个录入按钮</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除学生信息面板组件*/</span></span><br><span class="line">JPanel removejp1=<span class="keyword">new</span> JPanel();</span><br><span class="line">JPanel removejp2=<span class="keyword">new</span> JPanel();</span><br><span class="line">JPanel removejp3=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="keyword">public</span> JLabel removejl1=<span class="keyword">new</span> JLabel(<span class="string">"文档名称:"</span>);<span class="comment">//专业标签</span></span><br><span class="line"><span class="keyword">public</span> JTextField removej1=<span class="keyword">new</span> JTextField();<span class="comment">//学生性别的文本框</span></span><br><span class="line"><span class="keyword">public</span> JLabel removejl2=<span class="keyword">new</span> JLabel(<span class="string">"学生学号:"</span>);</span><br><span class="line"><span class="keyword">public</span> JTextField removej2=<span class="keyword">new</span> JTextField();</span><br><span class="line"><span class="keyword">public</span>JButton removeb1=<span class="keyword">new</span> JButton(<span class="string">"删除"</span>);<span class="comment">//定义一个录入按钮</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">XmlFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(<span class="string">"学生信息管理系统"</span>);</span><br><span class="line">setSize(<span class="number">600</span>,<span class="number">400</span>);<span class="comment">//设置窗体大小</span></span><br><span class="line"><span class="comment">//获取屏幕的宽度和高度,并让窗口居中显示</span></span><br><span class="line"><span class="keyword">double</span> width=Toolkit.getDefaultToolkit().getScreenSize().getWidth();</span><br><span class="line"><span class="keyword">double</span> height=Toolkit.getDefaultToolkit().getScreenSize().getHeight();</span><br><span class="line">setLocation((<span class="keyword">int</span>)(width-<span class="keyword">this</span>.getWidth())/<span class="number">2</span>, (<span class="keyword">int</span>)(height-<span class="keyword">this</span>.getHeight())/<span class="number">2</span>);</span><br><span class="line">setDefaultCloseOperation(EXIT_ON_CLOSE);<span class="comment">//设置窗体关闭规则</span></span><br><span class="line">Container con=getContentPane();<span class="comment">//获取窗口容器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span>();<span class="comment">//初始化面板中的组件信息</span></span><br><span class="line">buttonAction();<span class="comment">//初始化面板中的点击事件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 组件添加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">module</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*标签面板*/</span></span><br><span class="line">tabbedPane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);<span class="comment">// 设置选项卡标签的布局方式</span></span><br><span class="line">    <span class="keyword">this</span>.getContentPane().add(tabbedPane, BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加学生数据面板信息*/</span></span><br><span class="line"><span class="comment">/*文本框长度*/</span></span><br><span class="line"><span class="comment">//addj.setBorder(null);//去掉文本框边线</span></span><br><span class="line">addj.setColumns(<span class="number">18</span>);</span><br><span class="line">addj1.setColumns(<span class="number">18</span>);</span><br><span class="line">addj2.setColumns(<span class="number">18</span>);</span><br><span class="line">addj3.setColumns(<span class="number">18</span>);</span><br><span class="line">addj4.setColumns(<span class="number">18</span>);</span><br><span class="line"><span class="comment">/*添加组件*/</span></span><br><span class="line">addjp.add(addjl);</span><br><span class="line">addjp.add(addj);</span><br><span class="line">addjp1.add(addjl1);</span><br><span class="line">addjp1.add(addj1);</span><br><span class="line">addjp2.add(addjl2);</span><br><span class="line">addjp2.add(addj2);</span><br><span class="line">addjp3.add(addjl3);</span><br><span class="line">addjp3.add(addj3);</span><br><span class="line">addjp4.add(addjl4);</span><br><span class="line">addjp4.add(addj4);</span><br><span class="line">addjp5.add(addb1);</span><br><span class="line"><span class="comment">/*将学生信息面板添加到增加学生数据面板里*/</span></span><br><span class="line">addPanel.add(addjp);</span><br><span class="line">addPanel.add(addjp1);</span><br><span class="line">addPanel.add(addjp2);</span><br><span class="line">addPanel.add(addjp3);</span><br><span class="line">addPanel.add(addjp4);</span><br><span class="line">addPanel.add(addjp5);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*新增XML路径面板信息*/</span></span><br><span class="line">pathj1.setColumns(<span class="number">18</span>);</span><br><span class="line">pathjp1.add(pathjl1);</span><br><span class="line">pathjp1.add(pathj1);</span><br><span class="line">pathjp1.add(pathb1);</span><br><span class="line">pathPanel.add(pathjp1);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*浏览学生信息表格*/</span></span><br><span class="line">col=<span class="keyword">new</span> Vector();</span><br><span class="line"><span class="comment">//设置列名</span></span><br><span class="line">col.add(<span class="string">"学号"</span>);</span><br><span class="line">col.add(<span class="string">"姓名"</span>);</span><br><span class="line">col.add(<span class="string">"性别"</span>);</span><br><span class="line">col.add(<span class="string">"专业"</span>);</span><br><span class="line">row=<span class="keyword">new</span> Vector();</span><br><span class="line">List&lt;Student&gt; stulist=<span class="keyword">new</span> ArrayList&lt;Student&gt;();</span><br><span class="line">stulist=Dom4jManger.PrintStudent(<span class="string">"stu.xml"</span>);</span><br><span class="line"><span class="keyword">for</span>(Student k:stulist) &#123;</span><br><span class="line">Vector line=<span class="keyword">new</span> Vector();</span><br><span class="line">line.add(k.getCode());</span><br><span class="line">line.add(k.getName());</span><br><span class="line">line.add(k.getSex());</span><br><span class="line">line.add(k.getSpecialty());</span><br><span class="line">row.add(line);</span><br><span class="line">&#125;</span><br><span class="line">table=<span class="keyword">new</span> JTable(row,col);</span><br><span class="line">printPanel=<span class="keyword">new</span> JScrollPane(table);</span><br><span class="line"><span class="comment">// 将标签组件添加到选项卡中</span></span><br><span class="line">tabbedPane.add(<span class="string">"建立新的xml文档"</span>,pathPanel);</span><br><span class="line">tabbedPane.add(<span class="string">"添加学生信息"</span>,addPanel);</span><br><span class="line">tabbedPane.add(<span class="string">"浏览学生信息"</span>,printPanel);</span><br><span class="line">tabbedPane.add(<span class="string">"更改学生信息"</span>,changePanel);</span><br><span class="line">tabbedPane.add(<span class="string">"删除学生信息"</span>,removePanel);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更改学生信息面板*/</span></span><br><span class="line">changej.setColumns(<span class="number">18</span>);</span><br><span class="line">changej1.setColumns(<span class="number">18</span>);</span><br><span class="line">changej2.setColumns(<span class="number">18</span>);</span><br><span class="line">changej3.setColumns(<span class="number">18</span>);</span><br><span class="line">changej4.setColumns(<span class="number">18</span>);</span><br><span class="line">changejp.add(changejl);</span><br><span class="line">changejp.add(changej);</span><br><span class="line">changejp1.add(changejl1);</span><br><span class="line">changejp1.add(changej1);</span><br><span class="line">changejp2.add(changejl2);</span><br><span class="line">changejp2.add(changej2);</span><br><span class="line">changejp3.add(changejl3);</span><br><span class="line">changejp3.add(changej3);</span><br><span class="line">changejp4.add(changejl4);</span><br><span class="line">changejp4.add(changej4);</span><br><span class="line">changejp5.add(changeb1);</span><br><span class="line">changePanel.add(changejp);</span><br><span class="line">changePanel.add(changejp2);</span><br><span class="line">changePanel.add(changejp1);</span><br><span class="line">changePanel.add(changejp3);</span><br><span class="line">changePanel.add(changejp4);</span><br><span class="line">changePanel.add(changejp5);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除学生信息面板*/</span></span><br><span class="line">removej1.setColumns(<span class="number">18</span>);</span><br><span class="line">removej2.setColumns(<span class="number">18</span>);</span><br><span class="line">removejp1.add(removejl1);</span><br><span class="line">removejp1.add(removej1);</span><br><span class="line">removejp2.add(removejl2);</span><br><span class="line">removejp2.add(removej2);</span><br><span class="line">removejp3.add(removeb1);</span><br><span class="line">removePanel.add(removejp1);</span><br><span class="line">removePanel.add(removejp2);</span><br><span class="line">removePanel.add(removejp3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 按钮点击事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buttonAction</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*新建按钮点击事件*/</span></span><br><span class="line">pathb1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String pathName=pathj1.getText()+<span class="string">".xml"</span>;</span><br><span class="line"><span class="keyword">if</span>(!Tools.isXmlEmpty(pathName)) &#123;</span><br><span class="line">Student stu=<span class="keyword">new</span> Student(<span class="string">"初始化"</span>,<span class="string">"初始化"</span>,<span class="string">"初始化"</span>,<span class="string">"初始化"</span>);</span><br><span class="line">Dom4jManger dom=<span class="keyword">new</span> Dom4jManger(pathName, stu);</span><br><span class="line"><span class="comment">//创建XML文档</span></span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, pathName+<span class="string">"创建成功"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"该文档已存在"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加按钮点击事件*/</span></span><br><span class="line">addb1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent arg0)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String pathName=addj.getText()+<span class="string">".xml"</span>;</span><br><span class="line"><span class="keyword">if</span>(Tools.isXmlEmpty(pathName)) &#123;</span><br><span class="line">String name=addj1.getText();</span><br><span class="line">String code=addj2.getText();</span><br><span class="line">String sex=addj3.getText();</span><br><span class="line">String spec=addj4.getText();</span><br><span class="line">Student stu=<span class="keyword">new</span> Student(code,name,sex,spec);</span><br><span class="line">Dom4jManger.AddStudent(pathName, stu);</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"学生"</span>+name+<span class="string">"添加成功！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"该文档不存在"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加按钮点击事件*/</span></span><br><span class="line">changeb1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String pathName=changej.getText()+<span class="string">".xml"</span>;</span><br><span class="line"><span class="keyword">if</span>(Tools.isXmlEmpty(pathName)) &#123;</span><br><span class="line">String name=changej1.getText();</span><br><span class="line">String code=changej2.getText();</span><br><span class="line">String sex=changej3.getText();</span><br><span class="line">String spec=changej4.getText();</span><br><span class="line">Student stu=<span class="keyword">new</span> Student(code,name,sex,spec);</span><br><span class="line">Dom4jManger.changeStudent(pathName, stu);;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"更改成功！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"该文档不存在"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除按钮点击事件*/</span></span><br><span class="line">removeb1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String pathName=removej1.getText()+<span class="string">".xml"</span>;</span><br><span class="line"><span class="keyword">if</span>(Tools.isXmlEmpty(pathName)) &#123;</span><br><span class="line">String code=removej2.getText();</span><br><span class="line">Dom4jManger.removeStudent(pathName, code);</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"删除成功！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"该文档不存在"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*表格双击事件*/</span></span><br><span class="line">table.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;<span class="comment">//当鼠标双击时响应</span></span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> row=table.getSelectedRow();<span class="comment">//获取行</span></span><br><span class="line"><span class="keyword">int</span> column=table.getSelectedColumn();<span class="comment">//获取列</span></span><br><span class="line"><span class="keyword">int</span> r=row+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> c=column+<span class="number">1</span>;</span><br><span class="line">Object value=table.getValueAt(row,column);</span><br><span class="line">String info=r+<span class="string">"行"</span>+c+<span class="string">"列"</span>;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, info);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">XmlFrame xm=<span class="keyword">new</span> XmlFrame();</span><br><span class="line">xm.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行后：<br><img src="https://img-blog.csdnimg.cn/20200215225349847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进行新建功能测试：</p><p><img src="https://img-blog.csdnimg.cn/20200215225437784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>找到工程目录查看：<br><img src="https://img-blog.csdnimg.cn/20200215225524770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功创建！<br>用记事本打开后：<br><img src="https://img-blog.csdnimg.cn/20200215225603447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加学生单位：<br><img src="https://img-blog.csdnimg.cn/20200215225817217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>之后小编又添加了几个学生对象，查看原XML文档：<br><img src="https://img-blog.csdnimg.cn/20200215225933651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加成功，之后浏览学生信息：<br><img src="https://img-blog.csdnimg.cn/20200215230057255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>读取XML文档信息成功，之后还可以进行删除和修改学生信息的操作，有兴趣的小伙伴可以自己操作一下哦！<br>谢谢！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、XML文档解析基础概念&quot;&gt;&lt;a href=&quot;#一、XML文档解析基础概念&quot; class=&quot;headerlink&quot; title=&quot;一、XML文档解析基础概念&quot;&gt;&lt;/a&gt;一、XML文档解析基础概念&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、XML文档有四种解析方法：&lt;/s
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE学习笔记(三):基本数据类型</title>
    <link href="http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%89)-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%89)-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-06-12T15:38:43.355Z</published>
    <updated>2020-06-13T11:38:50.233Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h1><p>在程序设计中经常用到一系列类型，它们需要特殊对待。可以把它们想象成“基本”类型。之所以特殊对待，是因为对于特别小的、简单的变量，往往用new来创建对象不是很有效的。因此，对于这些类型，Java采取与C和C++相同的方法，可以不用new来创建对象，例如：int a=15。<br><strong>一、整数:</strong></p><ol><li>byte:表示整数，最小的整数类型，包装器为Byte</li><li>short:也表示整数，但是表示范围更大，占两个字节(一字节=8-bit)，包装器为Short</li><li>int:常用的整数表达类型，占4个字节，包装器为Integer</li><li>long:最大的整数类型，占8个字节，包装器为Long</li></ol><p><strong>二、浮点数:</strong></p><ol><li>float:表示浮点数(小数)类型，占4个字节，包装器为Float</li><li>double:可以表示最大的浮点数类型，占8个字节，包装器为Double</li></ol><p><strong>三、字符:</strong></p><ol><li>char:字符表示类型，一个char可以存储一个字符，占2字节，包装器为Character</li></ol><p><strong>四、布尔类型:</strong></p><ol><li>boolean类型所占存储空间的大小没有明确指定，仅定义为能够取字面值true或false，包装器为Boolean</li></ol><p><strong>五、数据类型：void:</strong></p><ol><li>Java语言是强类型（Strong typed）的，从方法申明的语法可以看出方法的定义必须有返回值，而void就是空，在方法申明的时候表示该方法没有返回值。在此，你只需要知道，void是空类型</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本数据类型&quot;&gt;&lt;a href=&quot;#基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;基本数据类型&quot;&gt;&lt;/a&gt;基本数据类型&lt;/h1&gt;&lt;p&gt;在程序设计中经常用到一系列类型，它们需要特殊对待。可以把它们想象成“基本”类型。之所以特殊对待，是因为对于特
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE学习笔记(二):命令行编译简单的Java程序：Hello World</title>
    <link href="http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%BA%8C)-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%BC%96%E8%AF%91%E7%AE%80%E5%8D%95%E7%9A%84Java%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%BA%8C)-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%BC%96%E8%AF%91%E7%AE%80%E5%8D%95%E7%9A%84Java%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-06-12T15:37:01.523Z</published>
    <updated>2020-06-13T11:38:55.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java程序编译过程"><a href="#Java程序编译过程" class="headerlink" title="Java程序编译过程"></a>Java程序编译过程</h1><p><strong>Java的编译过程分为4步:</strong><br>1、java源代码文件的后缀名是”.java”的形式，通过编译器(compiler)被编译成字节码文件(“.class”后缀的文件)<br>2、不论是在什么系统中，java的字节码文件都是”.class”后缀的，这也是java可以跨平台的原因。3、针对不同的平台，通过不同的解释器(interpreter)，去解释运行编译后的字节码文件。<br>4、最终，我们就看到了程序运行的结果。<br><em>最终过程：源文件-&gt;编译器-&gt;字节码文件-&gt;解释器-&gt;运行结果</em></p><h1 id="Java语法的初步认识"><a href="#Java语法的初步认识" class="headerlink" title="Java语法的初步认识"></a>Java语法的初步认识</h1><p>1、在Java源文件中，类名必须和文件名相同。<br>2、在Java中,类的定义形式为：public Class 类名{};<br>3、学过C语言的同学都知道(建议学Java之前对C或C++进行基本的学习)，C语言中有一个主函数(main)，是程序的入口，在Java中同样也有这样一个函数(C语言中的函数就是Java中的方法，下文中以方法代替)，格式如下:public static void main(String[] args){}。<br><strong>注意:方法必须写在类中！</strong><br>4、在Java中字符串使用双引号来表示。例：”Hello World!”。<br>5、Java中的输出函数使用：System.out.println();。</p><h1 id="编译运行简单的Java程序：输出Hello-World"><a href="#编译运行简单的Java程序：输出Hello-World" class="headerlink" title="编译运行简单的Java程序：输出Hello World"></a>编译运行简单的Java程序：输出Hello World</h1><p>1、在任意路径新建记事本，输入如下图中的内容(<strong>文件中的的符号必须全是英文符号</strong>)：<br><img src="https://img-blog.csdnimg.cn/20200403094507901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2、如下图，修改记事本的名称为HelloWorld(类名)，并修改后缀为：.java<br><img src="https://img-blog.csdnimg.cn/20200403092920160.png#pic_center" alt="在这里插入图片描述"><br>3、使用Win+R组合键打开命令行窗口，输入 “  cd+你的java文件路径  “后回车(<strong>路径必须是英文路径</strong>)，如下图：<br><img src="https://img-blog.csdnimg.cn/20200403093629779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>4、以E盘为例，输入：” E: “，回车(如果文件在D盘，则输入：” D: “)，如下图<br><img src="https://img-blog.csdnimg.cn/20200403093912540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>5、使用 javac 命令(编译命令)编译java源文件：” javac HelloWorld.java”(<strong>必须带入后缀名</strong>)，如下图:<br><img src="https://img-blog.csdnimg.cn/20200403094620994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>6、打开文件路径会发现目录下出现了一个以” .class “为后缀的文件，这就是字节码文件，如下图：<br><img src="https://img-blog.csdnimg.cn/20200403094730364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>7、使用 java 命令(运行命令)运行字节码文件：” java HelloWorld “(<strong>不需要带入后缀名</strong>)，输出Hello World，如下图：<br><strong>注意：如果CLASSPATH环境变量没有配置正确，则会报错。</strong><br><img src="https://img-blog.csdnimg.cn/2020040309503758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>至此，java程序运行成功！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java程序编译过程&quot;&gt;&lt;a href=&quot;#Java程序编译过程&quot; class=&quot;headerlink&quot; title=&quot;Java程序编译过程&quot;&gt;&lt;/a&gt;Java程序编译过程&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Java的编译过程分为4步:&lt;/strong&gt;&lt;br&gt;1、j
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE学习笔记(一):Java语言概述及jdk环境搭建</title>
    <link href="http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)-Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0%E5%8F%8Ajdk%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)-Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0%E5%8F%8Ajdk%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-06-12T15:35:09.364Z</published>
    <updated>2020-06-13T11:38:40.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java语言概述"><a href="#Java语言概述" class="headerlink" title="Java语言概述"></a>Java语言概述</h1><h6 id="1-什么是Java"><a href="#1-什么是Java" class="headerlink" title="1.什么是Java"></a>1.什么是Java</h6><pre><code>(百度百科)Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程 ，同时Java还是一门解释性语言。</code></pre><p>在这里你只需要知道：Java是一门解释性编程语言，是面向对象的。其他知识我们会在后续学习中进行补充，下面就让我们开始探索Java的世界吧。</p><h1 id="jdk下载"><a href="#jdk下载" class="headerlink" title="jdk下载"></a>jdk下载</h1><p>1.jdk是什么:java development kit java开发工具包，下载安装配置环境后就可以使用Java语言了<br>2.jdk官网下载地址:<a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase-downloads.html</a><br>打开链接看到下图界面<br><img src="https://img-blog.csdnimg.cn/2020040209395158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>3.下滑界面后找到Java SE 8u241(推荐安装jdk8的版本,更加稳定)目录并点击Oracle JDK下的JDK Download，如下图<br><img src="https://img-blog.csdnimg.cn/20200402094233886.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>4.点击后进入如下界面<br><img src="https://img-blog.csdnimg.cn/20200402094405742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>5.下滑找到windows x64(这里说的是windows64位的系统,其他系统可以自己找到相对应的jdk进行安装)后的jdk安装包进行下载，如下图<br><img src="https://img-blog.csdnimg.cn/20200402094809401.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>6.点击后会出现如下界面,接受相关协议并进行点击下载,可能会出现相关登录提示,进行注册和登录后即可下载(如果觉得下载速度慢或者操作繁琐可以通过百度的资源进行直接下载)<br><img src="https://img-blog.csdnimg.cn/20200402095615551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>7.下载好后双击进入安装界面，如下图<br><img src="https://img-blog.csdnimg.cn/20200402102149728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>下图标记处可以更改安装路径<br><img src="https://img-blog.csdnimg.cn/20200402104039642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200402102638408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200402103814728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这里显示安装成功！</p><h1 id="jdk环境变量配置"><a href="#jdk环境变量配置" class="headerlink" title="jdk环境变量配置"></a>jdk环境变量配置</h1><p><strong>配置环境变量的目的:<br>java-home的配置提供JDK的安装目录，<br>path的配置提供的是java的编译环境，<br>classpath的配置提供的是java的运行环境。</strong><br>1、打开此电脑(即我的电脑),进入如下界面，找到左侧栏中此电脑，鼠标右击选择属性<br><img src="https://img-blog.csdnimg.cn/20200402121749633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">2、进入如下界面,点击左侧的高级系统设置<br><img src="https://img-blog.csdnimg.cn/20200402121925864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>3、进入如下界面点击环境变量<br><img src="https://img-blog.csdnimg.cn/20200402122020938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>4、点击图中箭头所指的新建按钮<br><img src="https://img-blog.csdnimg.cn/20200402122103687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>5、变量名中填写JAVA_HOME(代表jdk的位置)，之后在变量值中填入jdk的安装路径，点击确定<br><img src="https://img-blog.csdnimg.cn/20200402122219568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>6、再新建一个CLASSPATH变量,变量值为：%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar;（注意最后有一个分号,如果没有分号,class文件会无法运行）<br><img src="https://img-blog.csdnimg.cn/2020040216031660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>7、之后找到名为Path的变量(如图)，双击<br><img src="https://img-blog.csdnimg.cn/20200402122711732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>8、点击新建<img src="https://img-blog.csdnimg.cn/20200402122801299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>9、如图：填入：%JAVA_HOME%\bin(注意,必须是写在bin目录下)，点击确定确定确定就ok啦<br><img src="https://img-blog.csdnimg.cn/20200402122957403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>如上环境变量配置完成！</p><h1 id="jdk环境变量配置测试"><a href="#jdk环境变量配置测试" class="headerlink" title="jdk环境变量配置测试"></a>jdk环境变量配置测试</h1><p>1、使用Win+R组合快捷键,打开命令行窗口,如下图<br><img src="https://img-blog.csdnimg.cn/20200402125802826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2、输入java -version,显示如下图信息表示正常<br><img src="https://img-blog.csdnimg.cn/20200402130012680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>3、输入javac,显示如下图信息表示正常<img src="https://img-blog.csdnimg.cn/20200402130100213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>4、输入java,显示如下图信息表示正常<br><img src="https://img-blog.csdnimg.cn/20200402130141506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>如上,环境变量配置成功！</p><p>至此为止,jdk的下载安装以及环境变量的配置就完成了！</p><p><strong>下一节:命令行编译简单的java程序！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java语言概述&quot;&gt;&lt;a href=&quot;#Java语言概述&quot; class=&quot;headerlink&quot; title=&quot;Java语言概述&quot;&gt;&lt;/a&gt;Java语言概述&lt;/h1&gt;&lt;h6 id=&quot;1-什么是Java&quot;&gt;&lt;a href=&quot;#1-什么是Java&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE学习笔记(四):String类</title>
    <link href="http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E5%9B%9B)-String%E7%B1%BB/"/>
    <id>http://yoursite.com/2020/06/12/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E5%9B%9B)-String%E7%B1%BB/</id>
    <published>2020-06-12T15:31:48.134Z</published>
    <updated>2020-06-13T11:38:45.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h1><p>String类提供程序中指定字符串的一系列方法，是不可修改字符序列(即无法执行对字符串本身的修改)，下面对字符串的定义及常用方法进行解释。<br><strong>1、字符串的定义</strong><br>字符串定义格式:<br>String 字符串名称=”字符串内容”;<br>String 字符串名称=new String(“字符串内容”);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"我爱JAVA"</span>;</span><br><span class="line">String str=<span class="keyword">new</span> String(<span class="string">"我爱JAVA"</span>);</span><br></pre></td></tr></table></figure><p><strong>2、获取字符串长度</strong><br>方法：int length()，返回一个正整数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"abcdefg"</span>;</span><br><span class="line">System.out.println(str.length());</span><br><span class="line"><span class="comment">//输出:7</span></span><br></pre></td></tr></table></figure><p><strong>3、获取指定索引位置字符</strong><br>(1) 获取指定字符(返回char型数据)：<br>char charAt(int index);//获取索引位置字符串<br>(2) 获取字符串位置(都返回int型数据)：<br>int indexOf(String str);//获取第一次出现的索引<br>int indexOf(String str,int formIndex);//从指定位置往后查<br>int lastIndexOf(String str);//获取最后一次出现的位置<br>int lastIndexOf(String str,int formIndex);//从指定位置往前查</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"abcdefgabc"</span>;</span><br><span class="line"><span class="comment">//获取字符串的第一个字符</span></span><br><span class="line">System.out.println(str.charAt(<span class="number">0</span>));</span><br><span class="line"><span class="comment">//获取第一次出现的索引位置</span></span><br><span class="line">System.out.println(str.indexOf(<span class="string">"abc"</span>));</span><br><span class="line"><span class="comment">//获取第一次出现的索引位置，从指定位置往后查</span></span><br><span class="line">System.out.println(str.indexOf(<span class="string">"abc"</span>,<span class="number">4</span>));</span><br><span class="line"><span class="comment">//获取最后一次出现的索引位置</span></span><br><span class="line">System.out.println(str.lastIndexOf(<span class="string">"abc"</span>));</span><br><span class="line"><span class="comment">//获取最后一次出现的索引位置，从指定位置往前查</span></span><br><span class="line">System.out.println(str.lastIndexOf(<span class="string">"abc"</span>,<span class="number">6</span>));</span><br><span class="line"><span class="comment">//分别输出:a|0|7|7|0</span></span><br></pre></td></tr></table></figure><p><strong>4、截取字符串</strong><br>下列方法返回值都为字符串类型(String类型)：<br>(1) 指定开始位置截取字符串<br>String substring(int beginIndex);//beginIndex为开始位置<br>(1) 指定开始的位置和结束的位置截取字符串<br>String substring(int beginIndex,int endIndex);//beginIndex为开始位置，endIndex为结束位置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"abcdefg"</span>;</span><br><span class="line"><span class="comment">//指定开始位置截取字符串</span></span><br><span class="line">System.out.println(str.substring(<span class="number">3</span>));</span><br><span class="line"><span class="comment">//指定开始的位置和结束的位置截取字符串</span></span><br><span class="line">System.out.println(str.substring(<span class="number">1</span>,<span class="number">4</span>));</span><br><span class="line"><span class="comment">//分别输出:defg|bcd</span></span><br></pre></td></tr></table></figure><p><strong>5、拼接字符串</strong><br>使用‘+’运算符可实现多个字符串的拼接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"abc"</span>+<span class="string">"123"</span>;   </span><br><span class="line">System.out.println(str);</span><br><span class="line"><span class="comment">//输出:abc123</span></span><br></pre></td></tr></table></figure><p><strong>6、判断字符串的开始与结尾</strong><br>(1) 判断字符串结尾内容(返回一个布尔型数据)：<br>boolean endsWith(String suffix);// suffix为要对比的字符串<br>(2) 判断字符串句首内容(返回一个布尔型数据)：<br>boolean startsWith(stirng prefix);//prefix为要对比的字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"123abc123"</span>;   </span><br><span class="line"><span class="comment">//如果传入的字符串123是字符串a的结尾内容,则返回true，否则返回false</span></span><br><span class="line">System.out.println(str.endsWith(<span class="string">"123"</span>));</span><br><span class="line">System.out.println(str.endsWith(<span class="string">"1234"</span>));</span><br><span class="line"><span class="comment">//如果传入的字符串123是字符串a的开头内容,则返回true，否则返回false</span></span><br><span class="line">System.out.println(str.startsWith(<span class="string">"123"</span>));</span><br><span class="line">System.out.println(str.startsWith(<span class="string">"1234"</span>));</span><br><span class="line"><span class="comment">//输出:true|false|true|false</span></span><br></pre></td></tr></table></figure><p><strong>7、判断字符串是否相等</strong><br>Java中规定不能直接使用”==”号进行字符串内容的比较，应使用如下方法<br>(1) 字符串不忽略大小写的比较(返回一个布尔型数据)：<br>boolean equals(String antherString);<br>(2) 字符串忽略大小写的比较(返回一个布尔型数据)：<br>boolean equalsIgnoreCase(String anotherString);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"abc"</span>;   </span><br><span class="line"><span class="comment">//如果字符串相等(不忽略大小写),则返回true，否则返回false</span></span><br><span class="line">System.out.println(str.equals(<span class="string">"abc"</span>));</span><br><span class="line">System.out.println(str.equals(<span class="string">"Abc"</span>));</span><br><span class="line"><span class="comment">//如果字符串相等(忽略大小写),则返回true，否则返回false</span></span><br><span class="line">System.out.println(str.equalsIgnoreCase(<span class="string">"abc"</span>));</span><br><span class="line">System.out.println(str.equalsIgnoreCase(<span class="string">"Abc"</span>));</span><br><span class="line"><span class="comment">//输出:true|false|true|true</span></span><br></pre></td></tr></table></figure><p><strong>8、字符串替换</strong><br>下列方法返回值都为字符串类型(String类型)：<br>(1) 方法一：<br>String repalce(Strinh target,String replacement);<br>//target为旧字符序列，repalcement为替换后的新字符序列<br>(2) 方法二：<br>String relpaceAll(String regex, String replacement)；<br>//regex表示一种格式，将String中符合regex所给格式的字符串替换成replacement<br>(3) 方法三：<br>String replaceFirst(String regex, String replacement);<br> //将String中符合regex所给格式的第一个字符替换成replacement</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"www.baidu.com"</span>;   </span><br><span class="line"><span class="comment">//字符串替换</span></span><br><span class="line">System.out.println(str.replace(<span class="string">"."</span>,<span class="string">"#"</span>));</span><br><span class="line">System.out.println(str.replaceAll(<span class="string">"."</span>,<span class="string">"#"</span>));</span><br><span class="line">System.out.println(str.replaceFirst(<span class="string">"."</span>,<span class="string">"#"</span>));</span><br><span class="line"><span class="comment">//输出:www#baidu#com|#############|#ww.baidu.com</span></span><br></pre></td></tr></table></figure><p><strong>9、字符串分割</strong><br>下列方法返回值都为字符串类型(String类型)的数组：<br>(1) 字符串分割：<br>String[] split(String regex);//regex用于规定分割符号<br>(2) 限制分割次数：<br>String[] split(String regex,int limit);<br>//regex用于规定分割符号，limit为分割次数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"abc.def.123"</span>;   </span><br><span class="line"><span class="comment">//字符串分割</span></span><br><span class="line">String[] strArray=str.split(<span class="string">"\\."</span>);</span><br><span class="line"><span class="keyword">for</span>(String s:strArray) &#123;</span><br><span class="line">System.out.print(s+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//限制字符串分割次数</span></span><br><span class="line">String[] strArray1=str.split(<span class="string">"\\."</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(String s:strArray1) &#123;</span><br><span class="line">System.out.print(s+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出:abc def 123|abc def.123</span></span><br></pre></td></tr></table></figure><p><strong>10、字符串大小写转换</strong><br>下列方法返回值都为字符串类型(String类型)：<br>(1) 字符串内字符全部变成大写：<br>String toUpperCase();<br>(2) 字符串内字符全部变成小写：<br>String toLowerCase();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"abc DEF"</span>;</span><br><span class="line"><span class="comment">//字符串内字符全部变成大写</span></span><br><span class="line">System.out.println(str.toUpperCase());</span><br><span class="line"><span class="comment">//字符串内字符全部变成小写</span></span><br><span class="line">System.out.println(str.toLowerCase());</span><br><span class="line"><span class="comment">//输出:ABC DEF|abc def</span></span><br></pre></td></tr></table></figure><p><strong>11、格式化字符串</strong><br>String.format(String format,Object…args);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">Date date = <span class="keyword">new</span> Date();  </span><br><span class="line"><span class="comment">//格式化字符串</span></span><br><span class="line">String str=String.format(<span class="string">"%tF"</span>,date);</span><br><span class="line">System.out.println(str);</span><br><span class="line"><span class="comment">//输出:2020-04-15</span></span><br></pre></td></tr></table></figure><p><strong>12、去除空白内容</strong><br>下列方法返回值都为字符串类型(String类型)：<br>(1) 去除首位空白内容：<br>String trim();<br>(2) 去除字符串中所有空白内容<br>使用上文中的replaceAll方法<br>String replaceAll(“\s”,””);//    \ s正则表达式代表空白内容  ‘’”为空内容字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例:</span></span><br><span class="line">String str=<span class="string">"  abc"</span>;</span><br><span class="line">String str1=<span class="string">" abc 1   2  3"</span>;</span><br><span class="line">System.out.println(str);</span><br><span class="line">System.out.println(str.trim());</span><br><span class="line">System.out.println(str1);</span><br><span class="line">System.out.println(str1.replaceAll(<span class="string">"\\s"</span>,<span class="string">""</span>));</span><br><span class="line"><span class="comment">//输出:  abc|abc| abc 1   2  3|abc123</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;String类&quot;&gt;&lt;a href=&quot;#String类&quot; class=&quot;headerlink&quot; title=&quot;String类&quot;&gt;&lt;/a&gt;String类&lt;/h1&gt;&lt;p&gt;String类提供程序中指定字符串的一系列方法，是不可修改字符序列(即无法执行对字符串本身的修改)，
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>对Spring的JDBC框架再封装——提高效率</title>
    <link href="http://yoursite.com/2020/06/12/%E5%AF%B9Spring%E7%9A%84JDBC%E6%A1%86%E6%9E%B6%E5%86%8D%E5%B0%81%E8%A3%85/"/>
    <id>http://yoursite.com/2020/06/12/%E5%AF%B9Spring%E7%9A%84JDBC%E6%A1%86%E6%9E%B6%E5%86%8D%E5%B0%81%E8%A3%85/</id>
    <published>2020-06-12T15:23:41.323Z</published>
    <updated>2020-06-13T20:07:35.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h1><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述:"></a>问题描述:</h4><p>在CRUD的项目中使用JdbcTemplate操作数据库时,在dao层我们会发现这样一个问题，代码量重复且繁杂，现在如下类型参照表:<br><img src="https://img-blog.csdnimg.cn/20200601171701780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>在对他进行操作时，会有以下的代码:</strong></p><p><strong>1.实体类(model层)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 损坏类型子参照表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Damage_type_stable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> damage_type_sid;<span class="comment">//损坏类型子编号</span></span><br><span class="line">    <span class="keyword">private</span> String damage_type_sname;<span class="comment">//损害类型名称</span></span><br><span class="line">    <span class="keyword">private</span> String damage_type_shape;<span class="comment">//损坏形状</span></span><br><span class="line">    <span class="keyword">private</span> String damage_type_calcu;<span class="comment">//计算方法</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> damage_type_fid;<span class="comment">//损坏类型父编号</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDamage_type_sid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> damage_type_sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDamage_type_sid</span><span class="params">(<span class="keyword">int</span> damage_type_sid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.damage_type_sid = damage_type_sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDamage_type_sname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> damage_type_sname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDamage_type_sname</span><span class="params">(String damage_type_sname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.damage_type_sname = damage_type_sname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDamage_type_shape</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> damage_type_shape;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDamage_type_shape</span><span class="params">(String damage_type_shape)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.damage_type_shape = damage_type_shape;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDamage_type_calcu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> damage_type_calcu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDamage_type_calcu</span><span class="params">(String damage_type_calcu)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.damage_type_calcu = damage_type_calcu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDamage_type_fid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> damage_type_fid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDamage_type_fid</span><span class="params">(<span class="keyword">int</span> damage_type_fid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.damage_type_fid = damage_type_fid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Damage_type_stable&#123;"</span> +</span><br><span class="line">                <span class="string">"damage_type_sid="</span> + damage_type_sid +</span><br><span class="line">                <span class="string">", damage_type_sname='"</span> + damage_type_sname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", damage_type_shape='"</span> + damage_type_shape + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", damage_type_calcu='"</span> + damage_type_calcu + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", damage_type_fid="</span> + damage_type_fid +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、持久化层(dao层)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**</span><br><span class="line"> * 损坏类型子参照表数据库操作:持久化层</span><br><span class="line"> */</span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DamageTypeStableDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看所有损坏子类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回Damage_type_stable对象的List集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Damage_type_stable&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql=<span class="string">""</span>;</span><br><span class="line">            List&lt;Damage_type_stable&gt; query = jdbcTemplate.query(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;Damage_type_stable&gt;(Damage_type_stable<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">            <span class="keyword">return</span> query;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DataAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加损坏子类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> damage_type_stable 损坏子类型类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Damage_type_stable damage_type_stable)</span></span>&#123;</span><br><span class="line">        String sql=<span class="string">""</span>;</span><br><span class="line">        jdbcTemplate.update(sql,damage_type_stable.getDamage_type_sid(),damage_type_stable.getDamage_type_sname(),damage_type_stable.getDamage_type_shape(),damage_type_stable.getDamage_type_calcu(),damage_type_stable.getDamage_type_fid());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除损坏子类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 损坏子类型对应编号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 删除产生的依赖异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span><span class="keyword">throws</span> DataAccessException</span>&#123;</span><br><span class="line">        String sql=<span class="string">""</span>;</span><br><span class="line">        jdbcTemplate.update(sql,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改损坏子类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> damage_type_stable 损坏子类型类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(Damage_type_stable damage_type_stable)</span></span>&#123;</span><br><span class="line">        String sql=<span class="string">""</span>;</span><br><span class="line">        jdbcTemplate.update(sql,damage_type_stable.getDamage_type_sname(),damage_type_stable.getDamage_type_shape(),damage_type_stable.getDamage_type_calcu(),damage_type_stable.getDamage_type_fid(),damage_type_stable.getDamage_type_sid());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们会很容易的发现,在使用JdbcTemplate的update和query方法进行自动封装时对可变参数的传入重复且繁杂,假如我们的实体类有几十,甚至几百个属性呢…..</p><h2 id="二、解决办法"><a href="#二、解决办法" class="headerlink" title="二、解决办法"></a>二、解决办法</h2><h4 id="解决思路（以add方法为例）"><a href="#解决思路（以add方法为例）" class="headerlink" title="解决思路（以add方法为例）:"></a>解决思路（以add方法为例）:</h4><p>在JdbcTemplate中，提供了update方法的另一种重载方式:update(sql,Object []);，可以传入一个Object类的数组，按顺序依次封装。既然如此，我们就可以通过Java的反射机制，写一个工具方法，以Object类对象为参数，通过获取到对象中的所有get方法，将get到的返回值封装在一个数组里，使用上述update(sql,Object []);，进行数据库操作。实现自动封装update方法的可变参数。</p><p><strong>1、建库,并编写实体类(以Users类为示例）</strong><br><img src="https://img-blog.csdnimg.cn/2020060117482015.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Users</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;<span class="comment">//用户名</span></span><br><span class="line">    <span class="keyword">private</span> String pasword;<span class="comment">//密码</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPasword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pasword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPasword</span><span class="params">(String pasword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pasword = pasword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Users&#123;"</span> +</span><br><span class="line">                <span class="string">"username='"</span> + username + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", pasword='"</span> + pasword + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、获取到类对象所有的get方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取object的所有get方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Method&gt; <span class="title">getAllReadMethod</span><span class="params">(Object object)</span></span>&#123;</span><br><span class="line">    List&lt;Method&gt; method=<span class="keyword">new</span> ArrayList&lt;Method&gt;();</span><br><span class="line">    Class&lt;? extends Object&gt; testClass = object.getClass();</span><br><span class="line">    <span class="comment">//获得属性</span></span><br><span class="line">    Field[] fields = object.getClass().getDeclaredFields();</span><br><span class="line">    <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            PropertyDescriptor pd = <span class="keyword">new</span> PropertyDescriptor(field.getName(), testClass);</span><br><span class="line">            <span class="comment">//获得get方法</span></span><br><span class="line">            Method getMethod = pd.getReadMethod();</span><br><span class="line">            <span class="comment">//添加进List集合</span></span><br><span class="line">            method.add(getMethod);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IntrospectionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> method;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、得到所有get方法的返回值，并封装进Object数组中，然后返回</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 得到所有get方法的返回值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Object[] getAllMethodName(Object object)&#123;</span><br><span class="line"><span class="comment">//调用第一步中的方法:获取到所有的get方法</span></span><br><span class="line">    List&lt;Method&gt; allReadMethod = getAllReadMethod(object);</span><br><span class="line">    Object [] values=<span class="keyword">new</span> Object[allReadMethod.size()];</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(Method e:allReadMethod)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object invoke = e.invoke(object);</span><br><span class="line">            String s = invoke.toString();</span><br><span class="line">            values[i]=s;</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e1) &#123;</span><br><span class="line">            e1.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e1) &#123;</span><br><span class="line">            e1.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4、编写add方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 添加信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> object</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String sql,Object object)</span> </span>&#123;</span><br><span class="line">     Object[] allMethodName = getAllMethodName(object);</span><br><span class="line">     jdbcTemplate.update(sql,allMethodName);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>5、测试</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span></span>&#123;</span><br><span class="line">       Users user = <span class="keyword">new</span> Users();</span><br><span class="line">       user.setUsername(<span class="string">"abcde"</span>);</span><br><span class="line">       user.setPasword(<span class="string">"12345"</span>);</span><br><span class="line">       UserDao bean = ioc.getBean(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">       bean.add(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>6、测试结果</strong><br><img src="https://img-blog.csdnimg.cn/20200601175047441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>附完整代码(add,delete,change,findAll方法):</strong></p><p><strong>ClassUtils.java：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取object的所有get方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Method&gt; <span class="title">getAllReadMethod</span><span class="params">(Object object)</span></span>&#123;</span><br><span class="line">        List&lt;Method&gt; method=<span class="keyword">new</span> ArrayList&lt;Method&gt;();</span><br><span class="line">        Class&lt;? extends Object&gt; testClass = object.getClass();</span><br><span class="line">        <span class="comment">//获得属性</span></span><br><span class="line">        Field[] fields = object.getClass().getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                PropertyDescriptor pd = <span class="keyword">new</span> PropertyDescriptor(field.getName(), testClass);</span><br><span class="line">                <span class="comment">//获得get方法</span></span><br><span class="line">                Method getMethod = pd.getReadMethod();</span><br><span class="line">                method.add(getMethod);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IntrospectionException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> method;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到所有get方法的返回值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Object[] getAllMethodName(Object object)&#123;</span><br><span class="line">        List&lt;Method&gt; allReadMethod = getAllReadMethod(object);</span><br><span class="line">        Object [] values=<span class="keyword">new</span> Object[allReadMethod.size()];</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(Method e:allReadMethod)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Object invoke = e.invoke(object);</span><br><span class="line">                String s = invoke.toString();</span><br><span class="line"><span class="comment">//                System.out.println(s);</span></span><br><span class="line">                values[i]=s;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> values;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object[] getAllMethodNameAdd(Object object)&#123;</span><br><span class="line">        List&lt;Method&gt; allReadMethod = getAllReadMethod(object);</span><br><span class="line">        Object [] values=<span class="keyword">new</span> Object[allReadMethod.size()-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;allReadMethod.size();i++)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Object invoke = allReadMethod.get(i).invoke(object);</span><br><span class="line">                String s = invoke.toString();</span><br><span class="line">               <span class="comment">//System.out.println(s);</span></span><br><span class="line">                values[j]=s;</span><br><span class="line">                j++;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> values;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到类中每个参数的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">//    public void getAllMethodType(Object object)&#123;</span></span><br><span class="line"><span class="comment">//        List&lt;Method&gt; allReadMethod = getAllReadMethod(object);</span></span><br><span class="line"><span class="comment">//        int i=0;</span></span><br><span class="line"><span class="comment">//        int[] values=new int[allReadMethod.size()];</span></span><br><span class="line"><span class="comment">//        for (Method e:allReadMethod)&#123;</span></span><br><span class="line"><span class="comment">//            Type type = e.getAnnotatedReturnType().getType();</span></span><br><span class="line"><span class="comment">//            i++;</span></span><br><span class="line"><span class="comment">//            System.out.println(type);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模板:浏览信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql:sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object :类名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;?&gt; findAll(String sql,Object object)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;?&gt; query = jdbcTemplate.query(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(object.getClass()));</span><br><span class="line">            <span class="keyword">return</span> query;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DataAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模板:添加信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String sql,Object object)</span> </span>&#123;</span><br><span class="line">        Object[] allMethodName = getAllMethodNameAdd(object);</span><br><span class="line">        jdbcTemplate.update(sql,allMethodName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模板:删除信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql:sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id:id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String sql,<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        jdbcTemplate.update(sql,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String sql,String id)</span></span>&#123;</span><br><span class="line">        jdbcTemplate.update(sql,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模板:修改信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(String sql,Object object)</span></span>&#123;</span><br><span class="line">        Object[] allMethodName = getAllMethodName(object);</span><br><span class="line">        Object o=allMethodName[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;allMethodName.length-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            allMethodName[i]=allMethodName[i+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        allMethodName[allMethodName.length-<span class="number">1</span>]=o;</span><br><span class="line">        <span class="comment">//System.out.println(allMethodName.length);</span></span><br><span class="line">        jdbcTemplate.update(sql,allMethodName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模板:信息回显</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户名称:String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">messageBackLook</span><span class="params">(String sql,<span class="keyword">int</span> id,Object object)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object o = jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(object.getClass()), id);</span><br><span class="line">            <span class="keyword">return</span> o;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DataAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 信息回显</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户id:int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">messageBackLook</span><span class="params">(String sql,String id,Object object)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object o = jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(object.getClass()), id);</span><br><span class="line"><span class="comment">//            System.out.println(o);</span></span><br><span class="line">            <span class="keyword">return</span> o;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DataAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="finish！"><a href="#finish！" class="headerlink" title="finish！"></a>finish！</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、问题描述&quot;&gt;&lt;a href=&quot;#一、问题描述&quot; class=&quot;headerlink&quot; title=&quot;一、问题描述&quot;&gt;&lt;/a&gt;一、问题描述&lt;/h1&gt;&lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问
      
    
    </summary>
    
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring配置:自动扫描</title>
    <link href="http://yoursite.com/2020/06/12/Spring%E9%85%8D%E7%BD%AE-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F/"/>
    <id>http://yoursite.com/2020/06/12/Spring%E9%85%8D%E7%BD%AE-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F/</id>
    <published>2020-06-12T15:21:45.907Z</published>
    <updated>2020-06-13T20:07:20.666Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring配置-自动扫描"><a href="#Spring配置-自动扫描" class="headerlink" title="Spring配置:自动扫描"></a>Spring配置:自动扫描</h1><h5 id="一、在Spring的配置文件applicationContext-xml头部-引入context命名空间"><a href="#一、在Spring的配置文件applicationContext-xml头部-引入context命名空间" class="headerlink" title="一、在Spring的配置文件applicationContext.xml头部,引入context命名空间:"></a>一、在Spring的配置文件applicationContext.xml头部,引入context命名空间:</h5><p>xmlns:context=”<a href="http://www.springframework.org/schema/context&quot;" target="_blank" rel="noopener">http://www.springframework.org/schema/context&quot;</a><br>xsi:schemaLocation=”<a href="http://www.springframework.org/schema/context" target="_blank" rel="noopener">http://www.springframework.org/schema/context</a><br><a href="http://www.springframework.org/schema/context/spring-context.xsd&quot;" target="_blank" rel="noopener">http://www.springframework.org/schema/context/spring-context.xsd&quot;</a></p><h5 id="二、在配置文件中添加配置扫描所在包下-下图中为扫描com包-所有注解"><a href="#二、在配置文件中添加配置扫描所在包下-下图中为扫描com包-所有注解" class="headerlink" title="二、在配置文件中添加配置扫描所在包下(下图中为扫描com包)所有注解:"></a>二、在配置文件中添加配置扫描所在包下(下图中为扫描com包)所有注解:</h5><p> &lt;context:component-scan base-package=”com”/&gt;<br> 如下图:<br><img src="https://img-blog.csdnimg.cn/20200522193519842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTgzNTAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>至此,配置成功!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Spring配置-自动扫描&quot;&gt;&lt;a href=&quot;#Spring配置-自动扫描&quot; class=&quot;headerlink&quot; title=&quot;Spring配置:自动扫描&quot;&gt;&lt;/a&gt;Spring配置:自动扫描&lt;/h1&gt;&lt;h5 id=&quot;一、在Spring的配置文件applica
      
    
    </summary>
    
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>简易计算器</title>
    <link href="http://yoursite.com/2020/06/12/%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>http://yoursite.com/2020/06/12/%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/</id>
    <published>2020-06-12T14:50:17.169Z</published>
    <updated>2020-06-13T11:38:21.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于swing组件进行开发："><a href="#基于swing组件进行开发：" class="headerlink" title="基于swing组件进行开发："></a>基于swing组件进行开发：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> calculator_1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Container;</span><br><span class="line"><span class="keyword">import</span> java.awt.GridLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.LayoutManager;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count_1</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="comment">/*判断运算数据类型</span></span><br><span class="line"><span class="comment"> * i=1加法</span></span><br><span class="line"><span class="comment"> * i=2减法</span></span><br><span class="line"><span class="comment"> * i=3乘法</span></span><br><span class="line"><span class="comment"> * i=4除法</span></span><br><span class="line"><span class="comment"> * i=5取余</span></span><br><span class="line"><span class="comment"> * i=6求根</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">double</span> a,b;<span class="comment">//储存两个计算数的值</span></span><br><span class="line"><span class="keyword">private</span> String[] labels= &#123;</span><br><span class="line"><span class="string">"C"</span>,<span class="string">"/"</span>,<span class="string">"*"</span>,<span class="string">"X"</span>,</span><br><span class="line"><span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"-"</span>,</span><br><span class="line"><span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"+"</span>,</span><br><span class="line"><span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"."</span>,</span><br><span class="line"><span class="string">"%"</span>,<span class="string">"0"</span>,<span class="string">"q"</span>,<span class="string">"="</span></span><br><span class="line">&#125;;<span class="comment">//按钮信息</span></span><br><span class="line"><span class="keyword">private</span> JTextField jt=<span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line"><span class="comment">//输出一个文本框</span></span><br><span class="line"></span><br><span class="line">JButton c[]=<span class="keyword">new</span> JButton[<span class="number">20</span>];<span class="comment">//创建按钮</span></span><br><span class="line">Count_1()&#123;</span><br><span class="line"><span class="keyword">super</span>(<span class="string">"计算器"</span>);<span class="comment">//填写标题名字</span></span><br><span class="line">setBounds(<span class="number">650</span>,<span class="number">300</span>,<span class="number">230</span>,<span class="number">230</span>);<span class="comment">//设置窗体大小</span></span><br><span class="line">setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line"><span class="comment">//设置关闭规则，窗体关闭时结束程序运行</span></span><br><span class="line">Container con=getContentPane();<span class="comment">//获取窗体容器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> JPanel p1=<span class="keyword">new</span> JPanel();<span class="comment">//设置显示面板</span></span><br><span class="line">getContentPane().add(p1,BorderLayout.NORTH);</span><br><span class="line"><span class="comment">//顶层显示</span></span><br><span class="line"><span class="comment">//result.setHorizontalAlignment(SwingConstants.RIGHT);</span></span><br><span class="line"><span class="comment">//设置文本的水平对齐方式</span></span><br><span class="line">jt.setEditable(<span class="keyword">false</span>); <span class="comment">//只能显示，不能编辑 </span></span><br><span class="line">jt.setColumns(<span class="number">18</span>);</span><br><span class="line">jt.setBorder(<span class="keyword">null</span>);<span class="comment">//去掉文本框边线</span></span><br><span class="line">jt.setHorizontalAlignment(JTextField.RIGHT);</span><br><span class="line"><span class="comment">//文本框信息从右边显示</span></span><br><span class="line">p1.add(jt);<span class="comment">//将显示器添加到面板p1中</span></span><br><span class="line"></span><br><span class="line">JPanel p2=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">5</span>,<span class="number">4</span>));<span class="comment">//设置按钮面板，并设置布局为5行四列</span></span><br><span class="line">getContentPane().add(p2,BorderLayout.CENTER);<span class="comment">//设置按键面板显示在窗体底部</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">c[j]=<span class="keyword">new</span> JButton(labels[j]);<span class="comment">//添加按钮信息</span></span><br><span class="line">p2.add(c[j]);<span class="comment">//添加按钮</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setVisible(<span class="keyword">true</span>);<span class="comment">//设置窗体可见</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Button_action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">c[<span class="number">19</span>].setBackground(Color.pink);<span class="comment">//改变按钮颜色</span></span><br><span class="line"></span><br><span class="line">c[<span class="number">0</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">jt.setText(<span class="string">""</span>);<span class="comment">//清空文本框信息</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">c[<span class="number">1</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">i=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span>.equals(jt.getText()))<span class="comment">//判断文本框是否为空</span></span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"请先输入除数"</span>);</span><br><span class="line"><span class="comment">//若为空，则弹出提示框</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a=Double.parseDouble(jt.getText());<span class="comment">//数据转换，将除数的值赋给a</span></span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="comment">//文本框显示除法符号以及原有符号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">2</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">i=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span>.equals(jt.getText()))<span class="comment">//判断文本框是否为空</span></span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"请先输入乘数"</span>);</span><br><span class="line"><span class="comment">//若为空，则弹出提示框</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a=Double.parseDouble(jt.getText());<span class="comment">//数据转换，将乘数的值赋给a</span></span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="comment">//文本框显示除法符号以及原有符号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">3</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))<span class="comment">//若文本框不为空，则可执行撤销操作</span></span><br><span class="line">&#123;</span><br><span class="line">String wr=jt.getText();<span class="comment">//得到文本框内数据</span></span><br><span class="line">jt.setText(wr.substring(<span class="number">0</span>,wr.length()-<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">4</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">5</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">6</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">7</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">i=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span>.equals(jt.getText()))<span class="comment">//判断文本框是否为空</span></span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"请先输入减数"</span>);</span><br><span class="line"><span class="comment">//若为空，则弹出提示框</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a=Double.parseDouble(jt.getText());</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());<span class="comment">//文本框显示减法符号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">8</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">9</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">10</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">11</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span>.equals(jt.getText()))<span class="comment">//判断文本框是否为空</span></span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"请先输入加数"</span>);</span><br><span class="line"><span class="comment">//若为空，则弹出提示框</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a=Double.parseDouble(jt.getText());</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());<span class="comment">//文本框显示加法符号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">12</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">13</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">14</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">15</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">16</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">i=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span>.equals(jt.getText()))<span class="comment">//判断文本框是否为空</span></span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"请先输入取余数"</span>);</span><br><span class="line"><span class="comment">//若为空，则弹出提示框</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a=Double.parseDouble(jt.getText());</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());<span class="comment">//文本框显示取余数符号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">17</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">jt.setText(jt.getText()+((JButton)e.getSource()).getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">18</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="string">""</span>.equals(jt.getText()))</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"请先输入开根号"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">i=<span class="number">6</span>;</span><br><span class="line">jt.setText(((JButton)e.getSource()).getText());<span class="comment">//在文本框显示按钮的信息</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">c[<span class="number">19</span>].addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">String tp=jt.getText();</span><br><span class="line"><span class="keyword">int</span> m=tp.indexOf(<span class="string">'+'</span>);</span><br><span class="line">String tp1=tp.substring(m+<span class="number">1</span>);</span><br><span class="line">b=Double.parseDouble(tp1);</span><br><span class="line"><span class="keyword">double</span> k=a+b;</span><br><span class="line"><span class="comment">//保留小数点后6位数</span></span><br><span class="line">String tp3=String.format(<span class="string">"%.6f"</span>,k);</span><br><span class="line">jt.setText(tp3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">String tp=jt.getText();</span><br><span class="line"><span class="keyword">int</span> m=tp.indexOf(<span class="string">'-'</span>);</span><br><span class="line">String tp1=tp.substring(m+<span class="number">1</span>);</span><br><span class="line">b=Double.parseDouble(tp1);</span><br><span class="line"><span class="keyword">double</span> k=a-b;</span><br><span class="line">String tp3=String.format(<span class="string">"%.6f"</span>,k);</span><br><span class="line">jt.setText(tp3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">String tp=jt.getText();</span><br><span class="line"><span class="keyword">int</span> m=tp.indexOf(<span class="string">'*'</span>);</span><br><span class="line">String tp1=tp.substring(m+<span class="number">1</span>);</span><br><span class="line">b=Double.parseDouble(tp1);</span><br><span class="line"><span class="keyword">double</span> k=a*b;</span><br><span class="line">String tp3=String.format(<span class="string">"%.6f"</span>,k);</span><br><span class="line">jt.setText(tp3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">String tp=jt.getText();</span><br><span class="line"><span class="keyword">int</span> m=tp.indexOf(<span class="string">'/'</span>);</span><br><span class="line">String tp1=tp.substring(m+<span class="number">1</span>);</span><br><span class="line">b=Double.parseDouble(tp1);</span><br><span class="line"><span class="keyword">double</span> k=a/b;</span><br><span class="line">String tp3=String.format(<span class="string">"%.6f"</span>,k);</span><br><span class="line">jt.setText(tp3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">String tp=jt.getText();</span><br><span class="line"><span class="keyword">int</span> m=tp.indexOf(<span class="string">'%'</span>);</span><br><span class="line">String tp1=tp.substring(m+<span class="number">1</span>);</span><br><span class="line">b=Double.parseDouble(tp1);</span><br><span class="line"><span class="keyword">double</span> k=a%b;</span><br><span class="line">String tp3=String.format(<span class="string">"%.6f"</span>,k);</span><br><span class="line">jt.setText(tp3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line">String tp=jt.getText();</span><br><span class="line"><span class="keyword">int</span> m=tp.indexOf(<span class="string">'q'</span>);</span><br><span class="line">String tp1=tp.substring(m+<span class="number">1</span>);</span><br><span class="line">b=Double.parseDouble(tp1);</span><br><span class="line"><span class="keyword">if</span>(b&gt;=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> k=Math.sqrt(b);</span><br><span class="line">String tp3=String.format(<span class="string">"%.6f"</span>,k);</span><br><span class="line">jt.setText(tp3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"开根数必须为正数"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*main函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Count_1  c=<span class="keyword">new</span> Count_1();<span class="comment">//定义一个</span></span><br><span class="line">c.Button_action();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="https://img-blog.csdnimg.cn/20200211181510471.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基于swing组件进行开发：&quot;&gt;&lt;a href=&quot;#基于swing组件进行开发：&quot; class=&quot;headerlink&quot; title=&quot;基于swing组件进行开发：&quot;&gt;&lt;/a&gt;基于swing组件进行开发：&lt;/h1&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
</feed>
